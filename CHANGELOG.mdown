# 0.5.4

  * Bug fix for potential issues related to non-ASCII filter names
  * Git SHA: 7e2a973

# 0.5.3

 * Adding support for bind\_address
 * Git SHA: 12a67ab

# 0.5.2
  * Bug fixes for background tasks being invoked too often
  * Git SHA: 1c58072

# 0.5.1
  * Increase the safety of connection handling. Prevents some crashing
    conditions.
  * Reduce checkpoint intervals from 1 second to 250 milliseconds. This
    allows faster cleanups, and helps prevent "Delete in progress" errors.
  * Git SHA: 0d36e87

# 0.5.0

  * Major rewrite of the internal Multi-Version Concurrency Controll (MVCC).
    The old system was based on a single set map per version, along side a
    vacuum thread to do periodic cleanup. This did not scale well as each version
    had to copy the map of the last version, and since many versions could exist
    concurrently, it is possible for the heap to explode to many hundreds of MB or
    GB worth of just versioning information. Instead, we now maintain only 2 maps,
    a "primary" and "alternate", and make use of a list of delta updates. The vacuum
    thread now manages applying delta updates to the alternate map and rotating the
    primary and alternate. This reduces the memory overhead, and reduces the cost
    of creating a new version (create, drop, clear).
  * List ordering is no longer well defined due to delta lists
  * Reduced number of log messages
  * Slow flush and unmap operations still allow vacuum to make progress
  * Git SHA: 9a440fd

# 0.2.3

  * Reduce various messages from INFO to DEBUG level
  * Change default log level to INFO. Previously, syslog would
    be overwhelmed by the amount of logging messages.
  * Provide timing info for all the flush and unmap operations as INFO level
    message, instead of per-set info at DEBUG level
  * Improve thread safety in some cases where a set may be unmapped
    while being used
  * Git SHA: f3d9de2

# 0.2.2

  * Fixed bugs involving sets with very long common prefixes
  * Git SHA: c3d0730

# 0.2.0

  * Replace internal hashmap with an Adaptive Radix Tree (ART). This
  improves the create/drop time for instances with many many sets.
  * `list` command now can take a prefix and returns only sets matching
  * As a result of the ART tree, list results are sorted in descending order
  * Git SHA: a07e29b

# 0.1.0

  * Initial Release
  * Git SHA: 85a34d8

